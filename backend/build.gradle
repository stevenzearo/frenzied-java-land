subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        /*maven {
            url = uri("https://maven.pkg.github.com/stevenzearo/distance-lib")
            credentials {
                username = 'stevenzearo'
                password = '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'
            }
        }*/
    }
}

project(':backend:ichat-service-interface') {
    dependencies {
        implementation(project(':common:common-lib'))

        implementation("jakarta.validation:jakarta.validation-api:$javaxValidationVersion")
        implementation("javax.xml.bind:jaxb-api:$javaxVersion")
        implementation("com.sun.xml.bind:jaxb-impl:$javaxVersion")
        implementation("org.glassfish.jaxb:jaxb-runtime:$javaxVersion")

//        implementation("org.springframework.boot:spring-boot-starter:$springBootVersion")
//        implementation("org.springframework.boot:spring-boot-autoconfigure:$springBootVersion")

        implementation("org.springframework.cloud:spring-cloud-starter:$springCloudVersion")
        implementation("org.springframework.cloud:spring-cloud-context:$springCloudVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-config:$springCloudVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudVersion")
    }
}


project(':backend:ichat-service') {
    dependencies {
        implementation(project(':backend:ichat-service-interface'))
        implementation(project(':common:common-lib'))

        implementation("jakarta.validation:jakarta.validation-api:$javaxValidationVersion")
        implementation("javax.xml.bind:jaxb-api:$javaxVersion")
        implementation("com.sun.xml.bind:jaxb-impl:$javaxVersion")
        implementation("org.glassfish.jaxb:jaxb-runtime:$javaxVersion")

        implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion")
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springCloudVersion") {
            exclude group: 'com.google.code.gson', module: 'gson'
        }
        implementation ("io.freefair.okhttp-spring-boot:okhttp-spring-boot-starter:$okHttpVersion") {
            exclude group: 'javax.xml.bind', module: 'jaxb-api'
            exclude group: 'com.sun.xml.bind', module: 'jaxb-impl'
            exclude group: 'org.glassfish.jaxb', module: 'jaxb-runtime'
        }
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
        testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    }
}

project(':backend:ichat-service-db-migration') {
    dependencies {
        implementation("mysql:mysql-connector-java:$mysqlVersion")
        implementation("org.flywaydb:flyway-gradle-plugin:$flywayVersion")
    }
}