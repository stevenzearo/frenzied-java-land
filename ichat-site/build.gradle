plugins {
    id 'java'
    id 'idea'
    id 'application'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

application {
    mainClassName = 'app.Application'
}

test {
    useJUnit()
}

dependencies {
    implementation(project(':common:common-lib'))
    implementation(project(':backend:ichat-service-interface'))
    implementation("javax.xml.bind:jaxb-api:$javaxVersion")
    implementation("com.sun.xml.bind:jaxb-impl:$javaxVersion")
    implementation("org.glassfish.jaxb:jaxb-runtime:$javaxVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudVersion")
//    implementation("redis.clients:jedis:$jedisVersion")
//    implementation("org.springframework.data:spring-data-redis:$springDataVersion")
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$springCloudVersion"){
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    implementation("org.springframework.boot:spring-boot-starter-websocket:$springBootVersion")

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testImplementation("junit:junit:$junitVersion")
}

task overrideDevResources(type: Copy, group: 'Run Configurations', description: 'replace resources from conf/dev') {
    println("> start replace resources")
    def resources = fileTree('src/main/resources/')
    resources.each {
        println("> delete:" + it.name)
        it.deleteOnExit()
    }
    from fileTree('conf/dev/')
    into 'src/main/resources/'
    println("> replace resources successfully")
}

task overrideProdResources(type: Copy, group: 'Run Configurations', description: 'replace resources from conf/prod') {
    println("> start replace resources")
    def resources = fileTree('src/main/resources/')
    resources.each {
        println("> delete:" + it.name)
        it.deleteOnExit()
    }
    from fileTree('conf/prod/')
    into 'src/main/resources/'
    println("> replace resources successfully")
}